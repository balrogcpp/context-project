// created by Andrey Vasiliev

import Base from base.material

//----------------------------------------------------------------------------------------------------------------------
// Cut bright parts of scene
//----------------------------------------------------------------------------------------------------------------------
fragment_program brightStart glsl glsles hlsl
{
	source brightStart.frag

    default_params
    {
        param_named BrightThreshold float2 3.0 0.5
    }
}

material BrightStart : Base
{
	technique
	{
		pass
		{
            fragment_program_ref brightStart
			{
                param_named RT int 0
                param_named Lum int 1
                param_named_auto TexelSize0 inverse_texture_size 0
			}

			texture_unit RT
            {
                texture black.dds
                tex_address_mode clamp
                filtering bilinear
            }
			texture_unit Lum
            {
                texture black.dds
                tex_address_mode clamp
                filtering none
            }
		}
	}
}

fragment_program brightMod glsl glsles hlsl
{
	source brightMod.frag

    default_params
    {
        param_named MipCount float 10
    }
}

material BrightMod : Base
{
	technique
	{
		pass
		{
            fragment_program_ref brightMod
			{
                param_named RT int 0
                param_named RT0 int 1

                param_named_auto TexelSize1 inverse_texture_size 1
			}

			texture_unit RT
            {
                texture black.dds
                tex_address_mode clamp
                filtering none
            }
            texture_unit RT0
            {
                texture black.dds
                tex_address_mode clamp
                filtering bilinear
            }
        }
	}
}

fragment_program brightFeat glsl glsles hlsl
{
	source brightFeat.frag

    default_params
    {
        param_named ChromaticRadius float 0.005
    }
}

material BrightFeat : Base
{
    technique
    {
        pass
        {
            fragment_program_ref brightFeat
            {
                param_named RT int 0
                param_named_auto TexelSize0 inverse_texture_size 0
            }

            texture_unit RT
            {
                texture black.dds
                tex_address_mode clamp
                filtering bilinear
            }
        }
    }
}
