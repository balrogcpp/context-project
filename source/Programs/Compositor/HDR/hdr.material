// created by Andrey Vasiliev

import STD from stdquad.material

//----------------------------------------------------------------------------------------------------------------------
// Tent downsampling
//----------------------------------------------------------------------------------------------------------------------
fragment_program brightFBO glsl glsles hlsl
{
	source fbo.frag
}

fragment_program lumStart glsl glsles hlsl
{
	source lumStart.frag
}

fragment_program lumIt glsl glsles hlsl
{
	source lumIt.frag
}

fragment_program lumEnd glsl glsles hlsl
{
	source lumEnd.frag

    default_params
    {
        //param_named Exposure float3 553.5833 5.0 10.0
        //param_named Exposure float3 138.5833 5 10
        param_named Exposure float3 228.485283992 5 6.5
        param_named_auto timeSinceLast frame_time 1
    }
}

material BrightFBO : STD
{
    technique
    {
        pass
        {
            fragment_program_ref brightFBO
            {
                param_named RT int 0
                param_named_auto TexelSize inverse_texture_size 0
            }

            texture_unit RT
            {
                texture grey.dds
                tex_address_mode clamp
                filtering bilinear
            }
        }
    }
}

material LumStart : STD
{
    technique
    {
        pass
        {
            fragment_program_ref lumStart
            {
                param_named RT int 0
                param_named_auto TexSize packed_texture_size 0
                param_named_auto ViewportSize viewport_size
            }
        }
    }
}

material LumIt : STD
{
    technique
    {
        pass
        {
            fragment_program_ref lumIt
            {
                param_named RT int 0
                param_named_auto TexelSize inverse_texture_size 0
            }
        }
    }
}

material LumEnd : STD
{
    technique
    {
        pass
        {
            fragment_program_ref lumEnd
            {
                param_named RT int 0
                param_named Lum int 1
                param_named_auto TexelSize inverse_texture_size 0
            }

            texture_unit Lum
            {
                texture grey.dds
                tex_address_mode clamp
                filtering none
            }
        }
    }
}

fragment_program HDR glsl glsles hlsl
{
    source hdr.frag
}

material HDR : STD
{
	technique
	{
		pass
		{
            fragment_program_ref HDR
			{
                param_named RT int 0
                param_named BrightTex int 1
                param_named Lum int 2
                param_named DirtTex int 3
                param_named_auto TexelSize inverse_texture_size 1
			}

			texture_unit BrightTex
            {
                texture black.dds
                tex_address_mode clamp
                filtering bilinear
            }

			texture_unit Lum
            {
                texture white.dds
                tex_address_mode clamp
                filtering none
            }

			texture_unit DirtTex
            {
                texture black.dds
                tex_address_mode clamp
                filtering bilinear
            }
		}
	}
}
