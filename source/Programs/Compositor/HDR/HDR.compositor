// created by Andrey Vasiliev

//----------------------------------------------------------------------------------------------------------------------
// HDR
//----------------------------------------------------------------------------------------------------------------------

compositor HDR
{
    technique
    {
        texture rt target_width target_height PF_R11G11B10_FLOAT no_fsaa depth_pool 0
        texture rt0 1024 1024 PF_FLOAT16_R no_fsaa depth_pool 0
        texture rt1 256 256 PF_FLOAT16_R no_fsaa depth_pool 0
        texture rt2 64 64 PF_FLOAT16_R no_fsaa depth_pool 0
        texture rt3 16 16 PF_FLOAT16_R no_fsaa depth_pool 0
        texture rt4 4 4 PF_FLOAT16_R no_fsaa depth_pool 0
        texture lum 1 1 PF_FLOAT16_R no_fsaa depth_pool 0 chain_scope
        texture old 1 1 PF_FLOAT16_R no_fsaa depth_pool 0 chain_scope

        texture box0 256 256 PF_R11G11B10_FLOAT no_fsaa depth_pool 0
        texture box1 256 256 PF_R11G11B10_FLOAT no_fsaa depth_pool 0
        texture box2 256 256 PF_R11G11B10_FLOAT no_fsaa depth_pool 0
        texture box3 256 256 PF_R11G11B10_FLOAT no_fsaa depth_pool 0
        texture box4 256 256 PF_R11G11B10_FLOAT no_fsaa depth_pool 0
        texture box5 256 256 PF_R11G11B10_FLOAT no_fsaa depth_pool 0



        target rt
        {
            input previous
        }

        // target rt0
        // {
        //     pass render_quad
        //     {
        //         material HdrStart
        //         input 0 rt
        //     }
        // }

        target rt1
        {
            pass render_quad
            {
                material HdrStart
                input 0 rt
            }
        }

        target rt2
        {
            pass render_quad
            {
                material HdrDownsample
                input 0 rt1
            }
        }

        target rt3
        {
            pass render_quad
            {
                material HdrDownsample
                input 0 rt2
            }
        }

        target rt4
        {
            pass render_quad
            {
                material HdrDownsample
                input 0 rt3
            }
        }

        target lum
        {
            pass render_quad
            {
                material HdrEnd
                input 0 rt4
                input 1 old
            }
        }

        target old
        {
            pass render_quad
            {
                material Copy
                input 0 lum
            }
        }

        target box0
        {
            pass render_quad
            {
                material BrightStart
                input 0 rt
                input 1 lum
            }
        }

        target box1
        {
            pass render_quad
            {
                material BoxH
                input 0 box0
            }
        }

        target box2
        {
            pass render_quad
            {
                material BoxV
                input 0 box1
            }
        }

        target box3
        {
            pass render_quad
            {
                material BoxH
                input 0 box2
            }
        }

        target box4
        {
            pass render_quad
            {
                material BoxV
                input 0 box3
            }
        }

        target box5
        {
            pass render_quad
            {
                material BoxH
                input 0 box4
            }
        }

        target box5
        {
            pass render_quad
            {
                material BoxH
                input 0 box5
            }
        }

        target box5
        {
            pass render_quad
            {
                material BoxH
                input 0 box5
            }
        }

        target_output
        {
            pass render_quad
            {
                material HDR
                input 0 rt
                input 1 lum
                input 2 box5
            }
        }
    }
}

compositor Tonemap
{
    technique
    {
        texture rt target_width target_height PF_R11G11B10_FLOAT no_fsaa depth_pool 0

        target rt
        {
            input previous
        }

        target_output
        {
            pass render_quad
            {
                material Tonemap
                input 0 rt
            }
        }
    }
}
