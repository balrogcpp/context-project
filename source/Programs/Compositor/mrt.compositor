// created by Andrey Vasiliev

import STD from std.compositor

compositor MRT
{
    technique
    {
        compositor_logic DeferredLogic
        // 0 color; 1 depth + normals; 2 velocity;
        texture mrt target_width target_height PF_R11G11B10_FLOAT PF_DEPTH24_STENCIL8 no_fsaa depth_pool 1 chain_scope
        texture rt0 target_width_scaled 0.5 target_height_scaled 0.5 PF_R8G8B8 no_fsaa depth_pool 0 chain_scope
        texture rt1 target_width_scaled 0.5 target_height_scaled 0.5 PF_FLOAT16_R no_fsaa depth_pool 0 chain_scope

        texture ao target_width_scaled 0.5 target_height_scaled 0.5 PF_FLOAT16_R no_fsaa depth_pool 0 chain_scope
        texture ibl 128 128 PF_R11G11B10_FLOAT cubic no_fsaa depth_pool 0 global_scope

        target mrt
        {
            pass clear {}
            pass render_scene
            {
                last_render_queue 90
            }
        }

        target ao
        {
            pass clear
            {
                buffers colour
                colour_value 1 1 1 1
            }
        }
/*
        target rt0
        {
            pass render_quad
            {
                material Copy2x
                input 0 mrt 0
            }
        }

        target rt1
        {
            pass render_quad
            {
                identifier 11
                material DepthDownscaleMax
                input 0 mrt 1
            }
        }

        target mrt
        {
            shadows off
            pass render_scene
            {
                first_render_queue 95
            }
        }
*/
    }
}

compositor Copyback : STD
{
    technique
    {
        target_output
        {
            pass render_quad
            {
                material Copyback
                input 0 mrt
            }
        }
    }
}
