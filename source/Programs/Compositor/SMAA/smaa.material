//
//	SMAA/EdgeDetection
//
vertex_program SMAA/EdgeDetection_vs glsl glsles hlsl
{
	source SMAA_EdgeDetection.vert

	default_params
	{
		param_named_auto worldViewProj	worldviewproj_matrix
		param_named_auto ViewportSize	viewport_size
	}
}

fragment_program SMAA/EdgeDetection_ps glsl glsles hlsl
{
	source SMAA_EdgeDetection.frag
}

material SMAA/EdgeDetection
{
	technique
	{
		pass
		{
		    cull_hardware none
			depth_check off
            depth_write off
            polygon_mode_overrideable false

			vertex_program_ref SMAA/EdgeDetection_vs {}

			fragment_program_ref SMAA/EdgeDetection_ps
			{
				param_named rt_input	int 0
				param_named depthTex	int 1
			}

			texture_unit rt_input
			{
                texture black.dds
                tex_address_mode clamp
                filtering none
			}

			texture_unit depthTex
			{
                texture black.dds
                tex_address_mode clamp
                filtering bilinear
			}
		}
	}
}

//
//	SMAA/BlendingWeightCalculation
//
vertex_program SMAA/BlendingWeightCalculation_vs glsl glsles hlsl
{
	source SMAA_BlendingWeightCalculation.vert

	default_params
	{
		param_named_auto worldViewProj	worldviewproj_matrix
		param_named_auto ViewportSize	viewport_size
	}
}

fragment_program SMAA/BlendingWeightCalculation_ps glsl glsles hlsl
{
	source SMAA_BlendingWeightCalculation.frag

	default_params
	{
		param_named_auto ViewportSize	viewport_size
	}
}

material SMAA/BlendingWeightCalculation
{
	technique
	{
		pass
		{
		    cull_hardware none
			depth_check off
            depth_write off
            polygon_mode_overrideable false

			vertex_program_ref SMAA/BlendingWeightCalculation_vs {}

			fragment_program_ref SMAA/BlendingWeightCalculation_ps
			{
				param_named edgeTex		int 0
				param_named areaTex		int 1
				param_named searchTex	int 2
			}

			texture_unit edgeTex
			{
                texture black.dds
                tex_address_mode clamp
                filtering bilinear
			}

			texture_unit areaTex
			{
				texture AreaTexDX10.dds
				tex_address_mode clamp
				filtering bilinear
			}

			texture_unit searchTex
			{
				texture SearchTex.dds
				tex_address_mode clamp
				filtering bilinear
			}
		}
	}
}


//
//	SMAA/NeighborhoodBlending
//
vertex_program SMAA/NeighborhoodBlending_vs glsl glsles hlsl
{
	source SMAA_NeighborhoodBlending.vert

	default_params
	{
		param_named_auto worldViewProj	worldviewproj_matrix
		param_named_auto ViewportSize	viewport_size
	}
}

fragment_program SMAA/NeighborhoodBlending_ps glsl glsles hlsl
{
	source SMAA_NeighborhoodBlending.frag

	default_params
	{
		param_named_auto ViewportSize	viewport_size
	}
}

material SMAA/NeighborhoodBlending
{
	technique
	{
		pass
		{
		    cull_hardware none
			depth_check off
            depth_write off
            polygon_mode_overrideable false

			vertex_program_ref SMAA/NeighborhoodBlending_vs {}

			fragment_program_ref SMAA/NeighborhoodBlending_ps
			{
				param_named rt_input		int 0
				param_named blendTex		int 1
				param_named velocityTex		int 2
			}

			texture_unit rt_input
			{
                texture black.dds
                tex_address_mode clamp
                filtering bilinear
			}

			texture_unit blendTex
			{
                texture black.dds
                tex_address_mode clamp
                filtering bilinear
			}

			texture_unit velocityTex
			{
                texture black.dds
                tex_address_mode clamp
                filtering bilinear
			}
		}
	}
}
