// created by Andrey Vasiliev

//----------------------------------------------------------------------------------------------------------------------
// MRT
//----------------------------------------------------------------------------------------------------------------------
compositor NoMRT
{
    technique
    {
        compositor_logic DeferredLogic
        texture rt target_width target_height PF_R11G11B10_FLOAT no_fsaa

        target rt
        {
            pass clear {}
            pass render_scene
            {
                identifier 0
            }
        }

        target_output
        {
            pass render_quad
            {
                material Copy
                input 0 rt
            }
        }
    }
}

compositor MRT
{
    technique
    {
        compositor_logic DeferredLogic
        // 0 color; 1 depth; 2 velocity; 3 normals; 4 gloss;
        texture mrt target_width target_height PF_R11G11B10_FLOAT PF_FLOAT16_R PF_R8G8 PF_R11G11B10_FLOAT PF_R8G8 no_fsaa chain_scope

        target mrt
        {
            pass clear {}
            pass render_scene
            {
                identifier 0
            }
        }

        target_output
        {
            pass render_quad
            {
                material Copy
                input 0 mrt 0
            }
        }
    }
}

compositor DepthHalved
{
    technique
    {
        compositor_logic DeferredLogic
        texture_ref mrt MRT mrt
        texture depth target_width_scaled 0.5 target_height_scaled 0.5 PF_FLOAT16_R no_fsaa depth_pool 0 chain_scope

        target depth
        {
            pass render_quad
            {
                material Downscale2x2
                input 0 mrt 1
            }
        }

        target_output
        {
            input previous
        }
    }
}

compositor Reconstructor
{
    technique
    {
        compositor_logic DeferredLogic
        texture_ref mrt MRT mrt
        texture result target_width target_height PF_R11G11B10_FLOAT no_fsaa depth_pool 0
        texture depth target_width target_height PF_FLOAT16_R no_fsaa depth_pool 0
        texture prev target_width target_height PF_R11G11B10_FLOAT no_fsaa depth_pool 0

        target result
        {
            pass render_quad
            {
                identifier 1
                quad_normals camera_far_corners_view_space
                material Reconstructor
                input 0 mrt 0
                input 1 prev
                input 2 mrt 2
                input 3 mrt 1
                input 4 depth
            }
        }

        target prev
        {
            pass render_quad
            {
                material Copy
                input 0 mrt 0
            }
        }

        target depth
        {
            pass render_quad
            {
                material Copy
                input 0 mrt 1
            }
        }

        target_output
        {
            pass render_quad
            {
                material Copy
                input 0 result
            }
        }
    }
}

compositor Paused
{
    technique
    {
        compositor_logic DeferredLogic
        texture rt target_width target_height PF_R11G11B10_FLOAT no_fsaa depth_pool 0
        texture rtx target_width target_height PF_R11G11B10_FLOAT no_fsaa depth_pool 0
        texture rty target_width target_height PF_R11G11B10_FLOAT no_fsaa depth_pool 0
        texture rtx1 target_width target_height PF_R11G11B10_FLOAT no_fsaa depth_pool 0
        texture rty2 target_width target_height PF_R11G11B10_FLOAT no_fsaa depth_pool 0

        target rt
        {
            only_initial on
            input previous
        }

        target rtx
        {
            only_initial on
            pass render_quad
            {
                material FilterX
                input 0 rt
            }
        }

        target rty
        {
            only_initial on
            pass render_quad
            {
                material FilterY
                input 0 rtx
            }
        }

        target rtx1
        {
            only_initial on
            pass render_quad
            {
                material FilterX
                input 0 rty
            }
        }

        target rty1
        {
            only_initial on
            pass render_quad
            {
                material FilterY
                input 0 rtx1
            }
        }

        target_output
        {
            pass render_quad
            {
                identifier 1000
                material Copy
                input 0 rty1
            }
        }
    }
}
