// created by Andrey Vasiliev

//----------------------------------------------------------------------------------------------------------------------
// MRT
//----------------------------------------------------------------------------------------------------------------------

compositor MRT
{
    technique
    {
        compositor_logic DeferredLogic

        // 0 color; 1 gloss; 2 ambient; 3 depth; 4 normals; 5 velocity; 
        texture mrt target_width target_height PF_R11G11B10_FLOAT PF_R11G11B10_FLOAT PF_R11G11B10_FLOAT PF_FLOAT16_R PF_R11G11B10_FLOAT PF_FLOAT16_GR chain_scope
        texture rt target_width target_height  PF_R11G11B10_FLOAT chain_scope

        target mrt
        {
            pass clear {}
            pass render_scene { identifier 0 }
        }

        target rt
        {
            pass clear {}
        }

        target_output
        {
            pass render_quad
            {
                material Copy
                input 0 mrt 0
            }
        }
    }
}


//----------------------------------------------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------------------------------------------

compositor Paused
{
    technique
    {
        compositor_logic DeferredLogic

        texture rt target_width target_height PF_R11G11B10_FLOAT
        texture rtx target_width target_height PF_R11G11B10_FLOAT
        texture rty target_width target_height PF_R11G11B10_FLOAT

        target rt
        {
            identifier 99
            only_initial on
            input previous
        }

        target rtx
        {
            only_initial on
            pass render_quad
            {
                material FilterX
                input 0 rt
            }
        }

        target rty
        {
            only_initial on
            pass render_quad
            {
                material FilterY
                input 0 rtx
            }
        }

        target_output
        {
            pass render_quad
            {
                material Copy
                input 0 rty
            }
        }
    }
}
