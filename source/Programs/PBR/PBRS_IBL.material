// created by Andrey Vasiliev

import PBRS from PBRS.material
import PBRS_vs from PBRS.program
import PBRS_BaseI_fs from PBRS.program

abstract fragment_program PBRS_IBLI_fs glsl glsles : PBRS_BaseI_fs
{
    preprocessor_defines HAS_NORMALS,HAS_TANGENTS,HAS_BASECOLORMAP,HAS_EMISSIVEMAP,HAS_NORMALMAP,HAS_ORM,USE_IBL,MAX_LIGHTS=8
}

fragment_program PBRS_IBL_fs glsl glsles : PBRS_IBLI_fs {}

abstract material PBRS_IBL : PBRS
{
    set $IBL_Diffuse white.dds
    set $IBL_Specular black.dds
    set $IBL_LUT brdfLUT.dds

    technique
    {
        pass
        {
            texture_unit IBL_Diffuse
            {
                texture $IBL_Diffuse cubic
                sampler_ref PBRIBLSampler
            }
            texture_unit IBL_Specular
            {
                texture $IBL_Specular cubic
                sampler_ref PBRIBLSampler
            }
            texture_unit IBL_LUT
            {
                texture $IBL_LUT
                sampler_ref PBRLUTSampler
            }

            vertex_program_ref PBRS_vs {}

            fragment_program_ref PBRS_IBL_fs
            {
                param_named uAlbedoSampler      int 0
                param_named uNormalSampler      int 1
                param_named uORMSampler         int 2
                param_named uEmissiveSampler    int 3
                param_named uDiffuseEnvSampler  int 4
                param_named uSpecularEnvSampler int 5
                param_named uBrdfLUT            int 6
            }
        }
    }
}
