/// created by Andrey Vasiliev

import PBR from PBR.material
import PBR_I_vs from PBR.program
import PBR_BaseI_fs from PBR.program

abstract vertex_program PBR_Terrain_I_vs glsl glsles : PBR_I_vs
{
    preprocessor_defines HAS_UV,MAX_LIGHTS=8,SHADOWRECEIVER,MAX_SHADOW_TEXTURES=4
}

abstract fragment_program PBR_Terrain_I_fs glsl glsles : PBR_BaseI_fs
{
    preprocessor_defines TERRAIN,HAS_BASECOLORMAP,HAS_EMISSIVEMAP,HAS_NORMALMAP,HAS_PARALLAXMAP,HAS_ORM,MAX_LIGHTS=8,SHADOWRECEIVER,MAX_SHADOW_TEXTURES=4

    default_params
    {
        param_named uTerrainTexScale float 10.0
        param_named uShadowMap0 int 5
        param_named uShadowMap1 int 6
        param_named uShadowMap2 int 7
        param_named uShadowMap3 int 8
        param_named_auto ShadowTexel0 inverse_texture_size 5
        param_named_auto ShadowTexel1 inverse_texture_size 6
        param_named_auto ShadowTexel2 inverse_texture_size 7
        param_named_auto ShadowTexel3 inverse_texture_size 8
    }
}

vertex_program PBR_Terrain_nvc_vs glsl glsles : PBR_Terrain_I_vs {}

fragment_program PBR_Terrain_nvc_fs glsl glsles : PBR_Terrain_I_fs {}

vertex_program PBR_Terrain_vs glsl glsles : PBR_Terrain_I_vs
{
    preprocessor_defines VERTEX_COMPRESSION,HAS_UV,MAX_LIGHTS=8,SHADOWRECEIVER,MAX_SHADOW_TEXTURES=4
}

fragment_program PBR_Terrain_fs glsl glsles : PBR_Terrain_I_fs {}

abstract material PBR_Terrain
{
    transparency_casts_shadows off
    receive_shadows on

    set $Albedo white.dds
    set $Normal normal.dds
    set $ORM white.dds
    set $Emissive black.dds

    technique
    {
        pass
        {
            diffuse 1 1 1
            specular 1 1 1 1
            ambient 1 1 1
            emissive 0 0 0
            alpha_rejection greater_equal 127

            texture_unit Albedo
            {
                texture $Albedo
            }
            texture_unit Normal
            {
                texture $Normal
            }
            texture_unit ORM
            {
                texture $ORM
            }
            texture_unit Emissive
            {
                texture $Emissive
            }
            texture_unit GlobalNormal
            {
                texture $Normal
                filtering bilinear
            }

            texture_unit uShadowMap0
            {
                content_type shadow
                sampler_ref ShadowSampler
            }
            texture_unit uShadowMap1
            {
                content_type shadow
                sampler_ref ShadowSampler
            }
            texture_unit uShadowMap2
            {
                content_type shadow
                sampler_ref ShadowSampler
            }
            texture_unit uShadowMap3
            {
                content_type shadow
                sampler_ref ShadowSampler
            }

            vertex_program_ref PBR_Terrain_vs {}

            fragment_program_ref PBR_Terrain_fs
            {
                param_named uAlbedoSampler       int 0
                param_named uNormalSampler       int 1
                param_named uORMSampler          int 2
                param_named uEmissiveSampler     int 3
                param_named uGlobalNormalSampler int 4
            }
        }
    }
}

abstract material PBR_Terrain_nvc : PBR_Terrain // no vertex compression
{
    technique
    {
        pass
        {
            vertex_program_ref PBR_Terrain_nvc_vs {}

            fragment_program_ref PBR_Terrain_nvc_fs
            {
                param_named uAlbedoSampler       int 0
                param_named uNormalSampler       int 1
                param_named uORMSampler          int 2
                param_named uEmissiveSampler     int 3
                param_named uGlobalNormalSampler int 4
            }
        }
    }
}
