// created by Andrey Vasiliev

//----------------------------------------------------------------------------------------------------------------------
// PBR
//----------------------------------------------------------------------------------------------------------------------
shared_params PBR_Shared_vert {}

shared_params PBR_Shared_frag
{
    shared_param_named ShadowFilterSize float 4.0
    shared_param_named ShadowFilterIterations int 8
    shared_param_named PssmSplitPoints float4 6.7367 18.4907 400.0 400.0
}


abstract vertex_program PBR_I_vs glsl glsles hlsl
{
	source pbr.vert

    preprocessor_defines HAS_NORMALS,HAS_TANGENTS,HAS_UV,HAS_VERTEXCOLOR,SHADOWRECEIVER

    default_params
    {
        shared_params_ref PBR_Shared_vert

        param_named_auto ModelMatrix world_matrix
        param_named_auto WorldViewMatrix worldview_matrix
        param_named_auto WorldViewProjMatrix worldviewproj_matrix
        param_named_auto TexWorldViewProjMatrixArray texture_worldviewproj_matrix_array 4
        param_named_auto Time time_0_x_packed 100
        param_named_auto CameraPosition camera_position
    }
}

vertex_program PBR_vs glsl glsles hlsl : PBR_I_vs {}

abstract fragment_program PBR_I_fs glsl glsles hlsl
{
	source pbr.frag

    preprocessor_defines HAS_NORMALS,HAS_TANGENTS,HAS_BASECOLORMAP,HAS_EMISSIVEMAP,HAS_NORMALMAP,HAS_ORM,SHADOWRECEIVER
    
    default_params
    {
        shared_params_ref PBR_Shared_frag

        param_named_auto LightPositionArray light_position_array 8
        param_named_auto LightDirectionArray light_direction_array 8
        param_named_auto LightDiffuseScaledColourArray light_diffuse_colour_power_scaled_array 8
        param_named_auto LightAttenuationArray light_attenuation_array 8
        param_named_auto LightSpotParamsArray spotlight_params_array 8
        param_named_auto LightCastsShadowsArray light_casts_shadows_array 8
        param_named_auto LightCount light_count
        param_named_auto AmbientLightColour ambient_light_colour
        param_named_auto SurfaceAmbientColour surface_ambient_colour
        param_named_auto SurfaceDiffuseColour surface_diffuse_colour
        param_named_auto SurfaceSpecularColour surface_specular_colour
        param_named_auto SurfaceShininessColour surface_shininess
        param_named_auto SurfaceEmissiveColour surface_emissive_colour
        param_named_auto SurfaceAlphaRejection surface_alpha_rejection_value
        param_named_auto CameraPosition camera_position
        param_named_auto FarClipDistance far_clip_distance
        param_named_auto NearClipDistance near_clip_distance
        param_named_auto FrameTime frame_time
        param_named_auto Time time_0_x_packed 100
    }
}

fragment_program PBR_fs glsl glsles hlsl : PBR_I_fs
{
    default_params
    {
        param_named ShadowMap0 int 4
        param_named ShadowMap1 int 5
        param_named ShadowMap2 int 6
        param_named ShadowMap3 int 7
        param_named_auto ShadowTexel0 inverse_texture_size 4
        param_named_auto ShadowTexel1 inverse_texture_size 5
        param_named_auto ShadowTexel2 inverse_texture_size 6
        param_named_auto ShadowTexel3 inverse_texture_size 7
    }
}


//----------------------------------------------------------------------------------------------------------------------
// IBL
//----------------------------------------------------------------------------------------------------------------------
fragment_program IBL_fs glsl glsles hlsl : PBR_I_fs
{
    preprocessor_defines HAS_NORMALS,HAS_TANGENTS,HAS_BASECOLORMAP,HAS_EMISSIVEMAP,HAS_NORMALMAP,HAS_ORM,SHADOWRECEIVER,USE_IBL

    default_params
    {
        param_named ShadowMap0 int 7
        param_named ShadowMap1 int 8
        param_named ShadowMap2 int 9
        param_named ShadowMap3 int 10
        param_named_auto ShadowTexel0 inverse_texture_size 7
        param_named_auto ShadowTexel1 inverse_texture_size 8
        param_named_auto ShadowTexel2 inverse_texture_size 9
        param_named_auto ShadowTexel3 inverse_texture_size 10
    }
}


//----------------------------------------------------------------------------------------------------------------------
// PAGED_GEOMETRY
//----------------------------------------------------------------------------------------------------------------------
vertex_program PG_vs glsl glsles hlsl : PBR_I_vs
{
    preprocessor_defines HAS_NORMALS,HAS_TANGENTS,HAS_UV,HAS_VERTEXCOLOR,SHADOWRECEIVER,PAGED_GEOMETRY
}

fragment_program PG_fs glsl glsles hlsl : PBR_I_fs {}
