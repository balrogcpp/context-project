// created by Andrey Vasiliev

//----------------------------------------------------------------------------------------------------------------------
// PBR
//----------------------------------------------------------------------------------------------------------------------
shared_params PBR_Shared_vert
{
}

shared_params PSSM_Shared_frag
{
}

shared_params IBL_Shared_frag
{
    shared_param_named iblSH float3 [9] 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
}

abstract vertex_program PBR_I_vs glsl glsles hlsl
{
	source pbr.vert
    target vs_2_0
    preprocessor_defines HAS_NORMALS,HAS_UV,HAS_VERTEXCOLOR

    default_params
    {
        shared_params_ref PBR_Shared_vert
        param_named_auto WorldMatrix world_matrix
        param_named_auto WorldViewProjMatrix worldviewproj_matrix
        param_named_auto TexWorldViewProjMatrixArray texture_worldviewproj_matrix_array 8
    }
}

vertex_program IBL_vs glsl glsles hlsl : PBR_I_vs {}
vertex_program PBR_vs glsl glsles hlsl : PBR_I_vs {}

abstract fragment_program PBR_I_fs glsl glsles hlsl
{
	source pbr.frag
    preprocessor_defines HAS_BASECOLORMAP,HAS_EMISSIVEMAP,HAS_NORMALMAP,HAS_ORM
    
    default_params
    {
        shared_params_ref PSSM_Shared_frag
        shared_params_ref IBL_Shared_frag
        param_named_auto LightPositionArray light_position_array 8
        param_named_auto LightDirectionArray light_direction_array 8
        param_named_auto LightDiffuseScaledColourArray light_diffuse_colour_power_scaled_array 8
        param_named_auto LightAttenuationArray light_attenuation_array 8
        param_named_auto LightSpotParamsArray spotlight_params_array 8
        param_named_auto LightCastsShadowsArray light_casts_shadows_array 8
        //param_named_auto ShadowDepthRangeArray shadow_scene_depth_range_array 8
        param_named_auto LightCount light_count
        param_named_auto AmbientLightColour ambient_light_colour
        param_named_auto ShadowColour shadow_colour
        param_named_auto SurfaceAmbientColour surface_ambient_colour
        param_named_auto SurfaceDiffuseColour surface_diffuse_colour
        param_named_auto SurfaceSpecularColour surface_specular_colour
        //param_named_auto SurfaceShininessColour surface_shininess
        param_named_auto SurfaceEmissiveColour surface_emissive_colour
        param_named_auto SurfaceAlphaRejection surface_alpha_rejection_value
        param_named_auto FogColour fog_colour
        param_named_auto FogParams fog_params
        param_named_auto FarClipDistance far_clip_distance
        param_named_auto NearClipDistance near_clip_distance
        param_named_auto CameraPosition camera_position
        param_named_auto ViewMatrix view_matrix
    }
}

abstract fragment_program IBL_I_fs glsl glsles hlsl : PBR_I_fs
{
    preprocessor_defines HAS_BASECOLORMAP,HAS_EMISSIVEMAP,HAS_NORMALMAP,HAS_ORM,HAS_IBL
}

fragment_program PBR_fs glsl glsles hlsl : PBR_I_fs {}
fragment_program IBL_fs glsl glsles hlsl : IBL_I_fs {}


//----------------------------------------------------------------------------------------------------------------------
// PAGED_GEOMETRY
//----------------------------------------------------------------------------------------------------------------------
vertex_program PG_vs glsl glsles hlsl : PBR_I_vs
{
    preprocessor_defines HAS_NORMALS,HAS_UV,HAS_VERTEXCOLOR,PAGED_GEOMETRY
    default_params
    {
        param_named_auto Time time_0_x_packed 100
        //param_named_auto CameraPosition camera_position
    }
}

fragment_program PG_fs glsl glsles hlsl : PBR_I_fs
{
    preprocessor_defines HAS_BASECOLORMAP,HAS_ALPHA,HAS_NORMALMAP,HAS_ORM
}

vertex_program PG0_vs glsl glsles hlsl : PBR_I_vs
{
    preprocessor_defines HAS_UV,HAS_VERTEXCOLOR,PAGED_GEOMETRY
    default_params
    {
        param_named_auto Time time_0_x_packed 100
        //param_named_auto CameraPosition camera_position
    }
}

fragment_program PG0_fs glsl glsles hlsl : PG_fs
{
    preprocessor_defines HAS_BASECOLORMAP,HAS_ALPHA,HAS_NORMALMAP,HAS_ORM
}


//----------------------------------------------------------------------------------------------------------------------
// TERRA
//----------------------------------------------------------------------------------------------------------------------
vertex_program TERRA_vs glsl glsles hlsl : PBR_I_vs
{
    preprocessor_defines HAS_UV,VERTEX_COMPRESSION
}

fragment_program TERRA_fs glsl glsles hlsl : PBR_I_fs
{
    preprocessor_defines HAS_BASECOLORMAP,HAS_NORMALMAP,HAS_PARALLAXMAP,TERRA_NORMALMAP,TERRA_LIGHTMAP

    default_params
    {
        param_named OffsetScale float 0.01
    }
}
