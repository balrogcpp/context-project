apply plugin: 'com.android.application'

android {
    //buildToolsVersion '33.0.0'
    compileSdkVersion 33
    ndkVersion '25.2.9519653'

    defaultConfig {
        applicationId 'org.libsdl.app'
        minSdkVersion 21
        targetSdkVersion 33
        versionCode     1
        versionName    '1.0'
        externalNativeBuild {
            cmake {
                arguments ' -DANDROID_ARM_NEON=ON -G Ninja'
            }
        }
    }
    signingConfigs {
        release {
            if (project.hasProperty('MYAPP_RELEASE_STORE_FILE')) {
                storeFile file(MYAPP_RELEASE_STORE_FILE)
                storePassword MYAPP_RELEASE_STORE_PASSWORD
                keyAlias MYAPP_RELEASE_KEY_ALIAS
                keyPassword MYAPP_RELEASE_KEY_PASSWORD
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def zonedDate = ZonedDateTime.now(ZoneOffset.UTC)
            def date = zonedDate.format("YYYYMMdd'T'HHMMSS'Z'")
            def sha1 = System.getenv("GIT_SHA1") ?: "1.0"
            def deploy = System.getenv("GRADLE_DEPLOY")
            if (variant.name == "release") {
                outputFileName = "demo-${sha1}-android-arm64-${variant.name}-${date}.apk"
             } else {
                outputFileName = "demo-${sha1}-android-arm64-${variant.name}.apk"
             }
            if (deploy) {
                outputFileName = "../../../../../../../artifacts/" + outputFileName
            }
        }
    }
    sourceSets.main {
        jniLibs.srcDir 'libs'
    }
    externalNativeBuild {
        cmake {
            version '3.18.1+'
            path '../../../CMakeLists.txt'
        }
    }
    splits {
        abi {
            enable true
            reset()
            include 'arm64-v8a'
            universalApk false
        }
    }
    sourceSets {
        main {
            assets.srcDirs = ['assets']
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
}
