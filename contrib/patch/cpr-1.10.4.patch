diff --git a/include/CMakeLists.txt b/include/CMakeLists.txt
index b14ec5e..b421827 100644
--- a/include/CMakeLists.txt
+++ b/include/CMakeLists.txt
@@ -4,9 +4,9 @@ target_include_directories(cpr PUBLIC
     $<INSTALL_INTERFACE:include>
     $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
     $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}/cpr_generated_includes/>)
-
+file(DOWNLOAD https://raw.githubusercontent.com/gulrak/filesystem/v1.5.14/include/ghc/filesystem.hpp ${CMAKE_CURRENT_SOURCE_DIR}/cpr/ghc/filesystem.hpp)
 target_sources(cpr PRIVATE
-    # Header files (useful in IDEs)
+    cpr/ghc/filesystem.hpp
     cpr/accept_encoding.h
     cpr/api.h
     cpr/async.h
diff --git a/include/cpr/filesystem.h b/include/cpr/filesystem.h
index 0a3be50..732701b 100644
--- a/include/cpr/filesystem.h
+++ b/include/cpr/filesystem.h
@@ -6,14 +6,15 @@
 #include <boost/filesystem.hpp>
 namespace fs = boost::filesystem;
 // cppcheck-suppress preprocessorErrorDirective
-#elif __has_include(<filesystem>)
+#elif __has_include(<filesystem>) && ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || (defined(__cplusplus) && __cplusplus >= 201703L && !defined(__APPLE__)) || (!defined(__MAC_OS_X_VERSION_MIN_REQUIRED) || __MAC_OS_X_VERSION_MIN_REQUIRED >= 101500))
 #include <filesystem>
 namespace fs = std::filesystem;
-#elif __has_include("experimental/filesystem")
-#include <experimental/filesystem>
-namespace fs = std::experimental::filesystem;
+//#elif __has_include("experimental/filesystem")
+//#include <experimental/filesystem>
+//namespace fs = std::experimental::filesystem;
 #else
-#error "Failed to include <filesystem> header!"
+#include "ghc/filesystem.hpp"
+namespace fs = ghc::filesystem;
 #endif

 #endif
