diff --git a/CMakeLists.txt b/CMakeLists.txt
index 99bca69e..faba6f35 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -139,6 +139,7 @@ find_package(PVRTools)
 find_package(Lua51)
 find_package(TOLUAPP)
 find_package(PythonInterp)
+find_package(ZLIB)

 ## ensure python3 not picked up as default
 find_package(PythonVersion)
diff --git a/cegui/src/XMLParserModules/RapidXML/XMLParser.cpp b/cegui/src/XMLParserModules/RapidXML/XMLParser.cpp
index ac4ee7ff..cf58957f 100644
--- a/cegui/src/XMLParserModules/RapidXML/XMLParser.cpp
+++ b/cegui/src/XMLParserModules/RapidXML/XMLParser.cpp
@@ -144,7 +144,7 @@ void RapidXMLDocument::processElement(const rapidxml::xml_node<>* element)
             break;

         case rapidxml::node_data:
-            if (childNode->value() != '\0')
+            if (childNode->value())
                 d_handler->text(
                     reinterpret_cast<encoded_char*>(childNode->value()));

diff --git a/cmake/CEGUIMacros.cmake b/cmake/CEGUIMacros.cmake
index 2aca3ff3..14bbe030 100644
--- a/cmake/CEGUIMacros.cmake
+++ b/cmake/CEGUIMacros.cmake
@@ -2,7 +2,6 @@
 # Macro definitions used by CEGUI's cmake build
 ################################################################################
 include(FindPackageHandleStandardArgs)
-
 #
 # gather *.cpp and .h files for the current location
 #
@@ -242,61 +241,61 @@ macro (cegui_add_library_impl _LIB_NAME _IS_MODULE _SOURCE_FILES_VAR _HEADER_FIL
     #                       STATIC LIBRARY SET UP
     ###########################################################################
     if (CEGUI_BUILD_STATIC_CONFIGURATION)
-        add_library(${_LIB_NAME}_Static STATIC ${${_SOURCE_FILES_VAR}} ${${_HEADER_FILES_VAR}})
-        set_property(TARGET ${_LIB_NAME}_Static APPEND PROPERTY COMPILE_DEFINITIONS CEGUI_STATIC)
+        add_library(${_LIB_NAME} STATIC ${${_SOURCE_FILES_VAR}} ${${_HEADER_FILES_VAR}})
+        set_property(TARGET ${_LIB_NAME} APPEND PROPERTY COMPILE_DEFINITIONS CEGUI_STATIC)
         if (CEGUI_BUILD_STATIC_FACTORY_MODULE)
-            set_property(TARGET ${_LIB_NAME}_Static APPEND PROPERTY COMPILE_DEFINITIONS CEGUI_BUILD_STATIC_FACTORY_MODULE)
+            set_property(TARGET ${_LIB_NAME} APPEND PROPERTY COMPILE_DEFINITIONS CEGUI_BUILD_STATIC_FACTORY_MODULE)
         endif()
     endif()

     ###########################################################################
     #                       SHARED LIBRARY SET UP
     ###########################################################################
-    add_library(${_LIB_NAME} ${_LIB_TYPE} ${${_SOURCE_FILES_VAR}} ${${_HEADER_FILES_VAR}})
-    set_target_properties(${_LIB_NAME} PROPERTIES DEFINE_SYMBOL ${_CEGUI_EXPORT_DEFINE})
-
-    if (NOT CEGUI_BUILD_SHARED_LIBS_WITH_STATIC_DEPENDENCIES)
-        # Starting with CMake 2.8.12 LINK_INTERFACE_LIBRARIES was renamed to INTERFACE_LINK_LIBRARIES
-        if (${CMAKE_VERSION} VERSION_GREATER 2.8.12 OR ${CMAKE_VERSION} VERSION_EQUAL 2.8.12)
-            set_target_properties(${_LIB_NAME} PROPERTIES
-                INTERFACE_LINK_LIBRARIES ""
-            )
-        else()
-            set_target_properties(${_LIB_NAME} PROPERTIES
-                LINK_INTERFACE_LIBRARIES ""
-            )
-        endif()
-    endif()
-
-    if (APPLE)
-        set_target_properties(${_LIB_NAME} PROPERTIES
-            INSTALL_NAME_DIR ${CEGUI_APPLE_DYLIB_INSTALL_PATH}
-            BUILD_WITH_INSTALL_RPATH TRUE
-        )
-
-        # Force the somewhat standard .dylib extension for modules over the use of
-        # the .so extension
-        if (${_IS_MODULE})
-            set_target_properties(${_LIB_NAME} PROPERTIES SUFFIX ".dylib")
-        endif()
-
-    elseif(CEGUI_INSTALL_WITH_RPATH)
-        set_target_properties(${_LIB_NAME} PROPERTIES
-            INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/${CEGUI_LIB_INSTALL_DIR}"
-        )
-    endif()
+#    add_library(${_LIB_NAME} ${_LIB_TYPE} ${${_SOURCE_FILES_VAR}} ${${_HEADER_FILES_VAR}})
+#    set_target_properties(${_LIB_NAME} PROPERTIES DEFINE_SYMBOL ${_CEGUI_EXPORT_DEFINE})
+
+#    if (NOT CEGUI_BUILD_SHARED_LIBS_WITH_STATIC_DEPENDENCIES)
+#        # Starting with CMake 2.8.12 LINK_INTERFACE_LIBRARIES was renamed to INTERFACE_LINK_LIBRARIES
+#        if (${CMAKE_VERSION} VERSION_GREATER 2.8.12 OR ${CMAKE_VERSION} VERSION_EQUAL 2.8.12)
+#            set_target_properties(${_LIB_NAME} PROPERTIES
+#                INTERFACE_LINK_LIBRARIES ""
+#            )
+#        else()
+#            set_target_properties(${_LIB_NAME} PROPERTIES
+#                LINK_INTERFACE_LIBRARIES ""
+#            )
+#        endif()
+#    endif()
+
+#    if (APPLE)
+#        set_target_properties(${_LIB_NAME} PROPERTIES
+#            INSTALL_NAME_DIR ${CEGUI_APPLE_DYLIB_INSTALL_PATH}
+#            BUILD_WITH_INSTALL_RPATH TRUE
+#        )
+#
+#        # Force the somewhat standard .dylib extension for modules over the use of
+#        # the .so extension
+#        if (${_IS_MODULE})
+#            set_target_properties(${_LIB_NAME} PROPERTIES SUFFIX ".dylib")
+#        endif()
+#
+#    elseif(CEGUI_INSTALL_WITH_RPATH)
+#        set_target_properties(${_LIB_NAME} PROPERTIES
+#            INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/${CEGUI_LIB_INSTALL_DIR}"
+#        )
+#    endif()

     # Do not version modules, since we dlopen these directly and need to know
     # the name is what we think it will be (and not rely on symlinks which will
     # not be installed always, but usually only as part of *-dev packages).
-    if (NOT ${_IS_MODULE} AND NOT ANDROID)
-        if (NOT APPLE OR CEGUI_APPLE_DYLIB_SET_VERSION_INFO)
-            set_target_properties(${_LIB_NAME} PROPERTIES
-                VERSION ${CEGUI_ABI_VERSION}
-                SOVERSION ${CEGUI_SOVERSION}
-            )
-        endif()
-    endif()
+#    if (NOT ${_IS_MODULE} AND NOT ANDROID)
+#        if (NOT APPLE OR CEGUI_APPLE_DYLIB_SET_VERSION_INFO)
+#            set_target_properties(${_LIB_NAME} PROPERTIES
+#                VERSION ${CEGUI_ABI_VERSION}
+#                SOVERSION ${CEGUI_SOVERSION}
+#            )
+#        endif()
+#    endif()

     ###########################################################################
     #                           INSTALLATION
@@ -308,14 +307,14 @@ macro (cegui_add_library_impl _LIB_NAME _IS_MODULE _SOURCE_FILES_VAR _HEADER_FIL
             set(_CEGUI_LIB_DEST ${CEGUI_LIB_INSTALL_DIR})
         endif()

-        install(TARGETS ${_LIB_NAME}
-          RUNTIME DESTINATION bin COMPONENT cegui_bin
-          LIBRARY DESTINATION ${_CEGUI_LIB_DEST} COMPONENT cegui_lib
-          ARCHIVE DESTINATION ${CEGUI_LIB_INSTALL_DIR} COMPONENT cegui_devel
-        )
+#        install(TARGETS ${_LIB_NAME}
+#          RUNTIME DESTINATION bin COMPONENT cegui_bin
+#          LIBRARY DESTINATION ${_CEGUI_LIB_DEST} COMPONENT cegui_lib
+#          ARCHIVE DESTINATION ${CEGUI_LIB_INSTALL_DIR} COMPONENT cegui_devel
+#        )

         if (CEGUI_BUILD_STATIC_CONFIGURATION)
-            install(TARGETS ${_LIB_NAME}_Static
+            install(TARGETS ${_LIB_NAME}
               RUNTIME DESTINATION bin COMPONENT cegui_bin
               LIBRARY DESTINATION ${CEGUI_LIB_INSTALL_DIR} COMPONENT cegui_lib
               ARCHIVE DESTINATION ${CEGUI_LIB_INSTALL_DIR} COMPONENT cegui_devel
@@ -425,11 +424,11 @@ macro (cegui_add_sample _NAME)
     cegui_add_library_impl(${CEGUI_TARGET_NAME} TRUE CORE_SOURCE_FILES CORE_HEADER_FILES FALSE FALSE)

     # Setup custom install location
-    install(TARGETS ${CEGUI_TARGET_NAME}
-      RUNTIME DESTINATION bin COMPONENT cegui_samples
-      LIBRARY DESTINATION ${CEGUI_SAMPLE_INSTALL_DIR} COMPONENT cegui_samples
-      ARCHIVE DESTINATION ${CEGUI_SAMPLE_INSTALL_DIR} COMPONENT cegui_samples
-    )
+#    install(TARGETS ${CEGUI_TARGET_NAME}
+#      RUNTIME DESTINATION bin COMPONENT cegui_samples
+#      LIBRARY DESTINATION ${CEGUI_SAMPLE_INSTALL_DIR} COMPONENT cegui_samples
+#      ARCHIVE DESTINATION ${CEGUI_SAMPLE_INSTALL_DIR} COMPONENT cegui_samples
+#    )

     if (CEGUI_BUILD_STATIC_CONFIGURATION)
         install(TARGETS ${CEGUI_TARGET_NAME}_Static
@@ -553,7 +552,7 @@ macro (cegui_add_test_executable _NAME)
     endif()

     if (CEGUI_BUILD_STATIC_CONFIGURATION)
-        target_link_libraries(${CEGUI_TARGET_NAME}_Static
+        target_link_libraries(${CEGUI_TARGET_NAME}
             ${CEGUI_NULL_RENDERER_LIBNAME}_Static
             ${CEGUI_STATIC_XMLPARSER_MODULE}_Static
             ${CEGUI_STATIC_IMAGECODEC_MODULE}_Static
diff --git a/cmake/FindZLIB.cmake b/cmake/FindZLIB.cmake
deleted file mode 100644
index fc8d4c20..00000000
--- a/cmake/FindZLIB.cmake
+++ /dev/null
@@ -1,40 +0,0 @@
-################################################################################
-# Custom cmake module for CEGUI to find zlib
-################################################################################
-include(FindPackageHandleStandardArgs)
-
-find_path(ZLIB_H_PATH NAMES zlib.h)
-find_library(ZLIB_LIB NAMES zlib zdll z PATH_SUFFIXES dynamic)
-find_library(ZLIB_LIB_DBG NAMES zlib_d zdll_d z_d PATH_SUFFIXES dynamic)
-mark_as_advanced(ZLIB_H_PATH ZLIB_LIB ZLIB_LIB_DBG)
-
-if (WIN32 OR APPLE)
-    find_library(ZLIB_LIB_STATIC NAMES zlib zdll z PATH_SUFFIXES static)
-    find_library(ZLIB_LIB_STATIC_DBG NAMES zlib_d zdll_d z_d PATH_SUFFIXES static)
-    mark_as_advanced(ZLIB_LIB_STATIC ZLIB_LIB_STATIC_DBG)
-endif()
-
-cegui_find_package_handle_standard_args(ZLIB ZLIB_LIB ZLIB_H_PATH)
-
-
-# set up output vars
-if (ZLIB_FOUND)
-    set (ZLIB_INCLUDE_DIR ${ZLIB_H_PATH})
-    set (ZLIB_LIBRARIES ${ZLIB_LIB})
-    if (ZLIB_LIB_DBG)
-        set (ZLIB_LIBRARIES_DBG ${ZLIB_LIB_DBG})
-    endif()
-    if (ZLIB_LIB_STATIC)
-        set (ZLIB_LIBRARIES_STATIC ${ZLIB_LIB_STATIC})
-    endif()
-    if (ZLIB_LIB_STATIC_DBG)
-        set (ZLIB_LIBRARIES_STATIC_DBG ${ZLIB_LIB_STATIC_DBG})
-    endif()
-else()
-    set (ZLIB_INCLUDE_DIR)
-    set (ZLIB_LIBRARIES)
-    set (ZLIB_LIBRARIES_DBG)
-    set (ZLIB_LIBRARIES_STATIC)
-    set (ZLIB_LIBRARIES_STATIC_DBG)
-endif()
-
