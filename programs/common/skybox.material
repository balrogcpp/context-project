//MIT License
//
//Copyright (c) 2021 Andrei Vasilev
//
//Permission is hereby granted, free of charge, to any person obtaining a copy
//of this software and associated documentation files (the "Software"), to deal
//in the Software without restriction, including without limitation the rights
//to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//copies of the Software, and to permit persons to whom the Software is
//furnished to do so, subject to the following conditions:
//
//The above copyright notice and this permission notice shall be included in all
//copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//SOFTWARE.

vertex_program SkyBoxCustomVp glsl glsles
{
	source skybox.vert
    default_params
    {
        param_named_auto worldViewProj worldviewproj_matrix
    }
}

fragment_program SkyBoxCustomFp glsl glsles
{
	source skybox.frag
    default_params
    {
        param_named_auto uFogColour fog_colour
        param_named_auto uFogParams fog_params
        param_named cubemap int 0
    }
}

material SkyBox
{
	technique
	{
		pass
		{
            lighting off
            depth_write off

			vertex_program_ref SkyBoxCustomVp {}
			fragment_program_ref SkyBoxCustomFp {}

			texture_unit CubeMap
			{
				texture OutputCube.dds cubic
			}
		}
	}

}
