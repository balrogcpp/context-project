compositor Context/Main
{    
    technique
    {
        texture scene target_width target_height PF_BYTE_RGBA chain_scope

        // the scene we want to modulate
        target scene
        {
            input previous
        }
    }
}

compositor Context/GBuffer
{
    technique
    {
        // GBuffer enconding: --------------------------------------------------
        // mrt0: rgba --> unused in this sample (plain white, (1, 1, 1, 1))
        // mrt1: xyz --> normals, w --> normalized linear depth [0, 1]
        // mrt2: xyz --> position in view space
        //
        // use a better packing of variables in the mrt to (possibly) increase
        // performance!
        // ---------------------------------------------------------------------
        texture mrt target_width target_height PF_FLOAT32_RGBA PF_FLOAT32_RGBA chain_scope

        target mrt
        {
            input none
            shadows off
            material_scheme GBuffer

            pass clear
			{
			    buffers colour depth stencil
				depth_value 1.0
			}

            pass render_scene {}
        }
    }
}

compositor Context/Depth
{
    technique
    {
        texture depth target_width target_height PF_FLOAT16_R chain_scope

        target depth
        {
            input none
            shadows off
            material_scheme Depth

            pass clear
			{
			    buffers colour depth stencil
				depth_value 1.0
			}

            pass render_scene {}
        }
    }
}

compositor Context/SSAO
{
    technique
    {
        texture_ref bloom Context/Bloom bloom

        target bloom
        {
            pass render_quad
            {
                material Context/SSAO
            }
        }
    }
}

compositor Context/Bloom
{
    technique
    {
        texture bloom target_width target_height PF_BYTE_RGBA chain_scope

        target bloom
        {
            pass render_quad
            {
                material Context/bloom
            }
        }
    }
}

compositor Context/Filter1
{
    technique
    {
        texture_ref bloom Context/Bloom bloom

        target bloom
        {
            pass render_quad
            {
                material Context/filter1
            }
        }
    }
}

compositor Context/Filter2
{
    technique
    {
        texture_ref bloom Context/Bloom bloom

        target bloom
        {
            pass render_quad
            {
                material Context/filter2
            }
        }
    }
}

compositor Context/Modulate
{
    technique
    {
        target_output
        {
            pass render_quad
            {
                material Context/Modulate
            }
        }
    }
}

compositor Context/Modulate/SSAO
{
    technique
    {
        target_output
        {
            pass render_quad
            {
                material Context/Modulate/SSAO
            }
        }
    }
}

compositor Context/Modulate/HDR
{
    technique
    {
        texture hdr target_width target_height PF_FLOAT16_RGB chain_scope

        target hdr
        {
            pass render_quad
            {
                material Context/Modulate
            }
        }
    }
}

compositor Context/Modulate/SSAO/HDR
{
    technique
    {
        texture hdr target_width target_height PF_FLOAT16_RGB chain_scope

        target hdr
        {
            pass render_quad
            {
                material Context/Modulate/SSAO
            }
        }
    }
}

compositor Context/HDR
{
    technique
    {
        target_output
        {
            pass render_quad
            {
                material Context/HDR
            }
        }
    }
}

compositor Context/Bypass
{
    technique
    {
        target_output
        {
            pass render_quad
            {
                material Context/Bypass
            }
        }
    }
}