/*
MIT License

Copyright (c) 2020 Andrey Vasiliev

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/

vertex_program PbrTerrain_vs_glsl glsl
{
	source pbr.vert
    preprocessor_defines HAS_UV,SHADOWRECEIVER
}

vertex_program PbrTerrain_vs_glsles glsles
{
	source pbr.vert
    preprocessor_defines HAS_UV,SHADOWRECEIVER
}

vertex_program PbrTerrain_vs unified
{
	delegate PbrTerrain_vs_glsl
	delegate PbrTerrain_vs_glsles
}

fragment_program PbrTerrain_fs_glsl glsl
{
	source pbr.frag
    preprocessor_defines TERRAIN,TERRAIN_GLOBAL_NORMALMAP,HAS_PARALLAXMAP,HAS_BASECOLORMAP,HAS_NORMALMAP,HAS_METALROUGHNESSMAP,SHADOWRECEIVER
}

fragment_program PbrTerrain_fs_glsles glsles
{
	source pbr.frag
    preprocessor_defines TERRAIN,TERRAIN_GLOBAL_NORMALMAP,HAS_PARALLAXMAP,HAS_BASECOLORMAP,HAS_NORMALMAP,HAS_METALROUGHNESSMAP,SHADOWRECEIVER
}

fragment_program PbrTerrain_fs unified
{
	delegate PbrTerrain_fs_glsl
	delegate PbrTerrain_fs_glsles
}

material PbrTerrain
{
    technique
    {
      pass
      {
        specular 1 1 1 1
        ambient 0 0 0

        vertex_program_ref PbrTerrain_vs {}

        texture_unit AlbedoParallax {}
        texture_unit Normal {}
        texture_unit MetallicRougness {}
        texture_unit GlobalNormal {}

        fragment_program_ref PbrTerrain_fs
        {
            param_named uBaseColorSampler   int 0
            param_named uNormalSampler    int 1
            param_named uMetallicRoughnessSampler int 2
            param_named uGlobalNormalSampler int 3
        }
      }
    }
}