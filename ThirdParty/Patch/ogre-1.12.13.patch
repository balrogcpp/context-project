diff --git a/CMakeLists.txt b/CMakeLists.txt
index d5740ce6..e66e743b 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -271,12 +271,12 @@ elseif(EMSCRIPTEN)
 elseif (APPLE AND NOT APPLE_IOS)
 
   set(XCODE_ATTRIBUTE_SDKROOT macosx)
-  if(CMAKE_GENERATOR STREQUAL "Unix Makefiles")
-    execute_process(COMMAND xcodebuild -version -sdk "${XCODE_ATTRIBUTE_SDKROOT}" Path | head -n 1 OUTPUT_VARIABLE CMAKE_OSX_SYSROOT)
-    string(REGEX REPLACE "(\r?\n)+$" "" CMAKE_OSX_SYSROOT "${CMAKE_OSX_SYSROOT}")
-  else()
-    set(CMAKE_OSX_SYSROOT macosx)
-  endif()
+#  if(CMAKE_GENERATOR STREQUAL "Unix Makefiles")
+#    execute_process(COMMAND xcodebuild -version -sdk "${XCODE_ATTRIBUTE_SDKROOT}" Path | head -n 1 OUTPUT_VARIABLE CMAKE_OSX_SYSROOT)
+#    string(REGEX REPLACE "(\r?\n)+$" "" CMAKE_OSX_SYSROOT "${CMAKE_OSX_SYSROOT}")
+#  else()
+#    set(CMAKE_OSX_SYSROOT macosx)
+#  endif()
 
   # Make sure that the GLES2 render system is disabled for non-iOS Apple builds
   set(OGRE_BUILD_RENDERSYSTEM_GLES2 FALSE CACHE BOOL "" FORCE)
diff --git a/Components/Terrain/src/OgreTerrainQuadTreeNode.cpp b/Components/Terrain/src/OgreTerrainQuadTreeNode.cpp
index 3a2018d4..a4f24ed8 100644
--- a/Components/Terrain/src/OgreTerrainQuadTreeNode.cpp
+++ b/Components/Terrain/src/OgreTerrainQuadTreeNode.cpp
@@ -68,6 +68,7 @@ namespace Ogre
         , mVertexDataRecord(0)
         , mLocalNode(0)
     {
+        setCastShadows(TerrainGlobalOptions::getSingleton().getCastsDynamicShadows());
         if (terrain->getMaxBatchSize() < size)
         {
             uint16 childSize = (uint16)(((size - 1) * 0.5f) + 1);
diff --git a/OgreMain/CMakeLists.txt b/OgreMain/CMakeLists.txt
index 3189619a..660f3486 100644
--- a/OgreMain/CMakeLists.txt
+++ b/OgreMain/CMakeLists.txt
@@ -250,7 +250,9 @@ endif ()
 target_link_libraries(OgreMain PUBLIC ${PLATFORM_LIBS} PRIVATE ${LIBRARIES} ${CMAKE_DL_LIBS})
 
 # specify a precompiled header to use
+if (!APPLE)
 add_native_precompiled_header(OgreMain "${CMAKE_CURRENT_SOURCE_DIR}/src/OgreStableHeaders.h")
+endif ()
 
 # install OgreMain
 ogre_config_lib(OgreMain TRUE)
