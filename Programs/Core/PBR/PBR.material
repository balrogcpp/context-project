// This source file is part of "glue project". Created by Andrew Vasiliev

abstract material PBR_Basic
{
    transparency_casts_shadows off
    receive_shadows on

    set $Albedo white.dds

    technique
    {
        pass
        {
            specular 1 1 1 1
            diffuse 1 1 1
            ambient 1 1 1
            emissive 0 0 0

            texture_unit Albedo
            {
                texture $Albedo
            }

            texture_unit shadowMap0
            {
                content_type shadow
                sampler_ref ShadowSampler            
            }
            texture_unit shadowMap1
            {
                content_type shadow
                sampler_ref ShadowSampler            
            }
            texture_unit shadowMap2
            {
                content_type shadow
                sampler_ref ShadowSampler            
            }
            texture_unit shadowMap3
            {
                content_type shadow
                sampler_ref ShadowSampler            
            }

            vertex_program_ref PBR_vs {}

            fragment_program_ref PBR_Basic_fs
            {
                param_named uAlbedoSampler int 0
            }
        }
    }
}

abstract material PBR
{
    transparency_casts_shadows off
    receive_shadows on

    set $Albedo white.dds
    set $Normal normal.dds
    set $ORM white.dds
    set $Emissive black.dds

    technique
    {
        pass
        {
            diffuse 1 1 1
            specular 1 1 1 1
            ambient 1 1 1
            emissive 0 0 0

            texture_unit Albedo
            {
                texture $Albedo
            }
            texture_unit Normal
            {
                texture $Normal
            }
            texture_unit ORM
            {
                texture $ORM
            }
            texture_unit Emissive
            {
                texture $Emissive
            }

            texture_unit shadowMap0
            {
                content_type shadow
                sampler_ref ShadowSampler            
            }
            texture_unit shadowMap1
            {
                content_type shadow
                sampler_ref ShadowSampler            
            }
            texture_unit shadowMap2
            {
                content_type shadow
                sampler_ref ShadowSampler            
            }
            texture_unit shadowMap3
            {
                content_type shadow
                sampler_ref ShadowSampler            
            }

            vertex_program_ref PBR_vs {}

            fragment_program_ref PBR_fs
            {
                param_named uAlbedoSampler      int 0
                param_named uNormalSampler      int 1
                param_named uORMSampler         int 2
                param_named uEmissiveSampler    int 3
            }
        }
    }
}

abstract material PBR_IBL : PBR
{
    transparency_casts_shadows off
    receive_shadows on

    set $IBL_Diffuse diffuse.dds
    set $IBL_Specular specular.dds
    set $IBL_LUT brdfLUT.dds

    technique
    {
        pass
        {
            texture_unit IBL_Diffuse
            {
                texture $IBL_Diffuse cubic
                tex_address_mode clamp
                filtering bilinear
            }
            texture_unit IBL_Specular
            {
                texture $IBL_Specular cubic
                tex_address_mode clamp
                filtering bilinear
            }
            texture_unit IBL_LUT
            {
                tex_address_mode clamp
                texture $IBL_LUT
                filtering bilinear
            }
            
            texture_unit shadowMap0
            {
                content_type shadow
                sampler_ref ShadowSampler            
            }
            texture_unit shadowMap1
            {
                content_type shadow
                sampler_ref ShadowSampler            
            }
            texture_unit shadowMap2
            {
                content_type shadow
                sampler_ref ShadowSampler            
            }
            texture_unit shadowMap3
            {
                content_type shadow
                sampler_ref ShadowSampler            
            }

            vertex_program_ref PBR_vs {}

            fragment_program_ref PBR_IBL_fs
            {
                param_named uAlbedoSampler      int 0
                param_named uNormalSampler      int 1
                param_named uMetallicSampler    int 2
                param_named uRoughnessSampler   int 3
                param_named uOcclusionSampler   int 4
                param_named uEmissiveSampler    int 5
                param_named uDiffuseEnvSampler  int 6
                param_named uSpecularEnvSampler int 7
                param_named ubrdfLUT            int 8
            }
        }
    }
}

vertex_program PBR_Reflective_vs glsl glsles
{
	source PBR.vert
    preprocessor_defines HAS_NORMALS,HAS_TANGENTS,HAS_UV,HAS_REFLECTION,MAX_LIGHTS=8,SHADOWRECEIVER,MAX_SHADOW_TEXTURES=4
}

fragment_program PBR_Reflective_fs glsl glsles
{
	source PBR.frag
    preprocessor_defines HAS_NORMALS,HAS_TANGENTS,HAS_BASECOLORMAP,HAS_NORMALMAP,HAS_EMISSIVEMAP,HAS_ORM,HAS_REFLECTION,MAX_LIGHTS=8,SHADOWRECEIVER,MAX_SHADOW_TEXTURES=4

    default_params
    {
        shared_params_ref PBR_Shared_frag
    }
}

abstract material PBR_Plane : PBR
{
    receive_shadows on
    transparency_casts_shadows off

    technique
    {
        pass
        {
            texture_unit ReflectionMap
            {
                texture black.dds
                filtering bilinear
            }

            vertex_program_ref PBR_Reflective_vs {}

            fragment_program_ref PBR_Reflective_fs
            {
                param_named uAlbedoSampler      int 0
                param_named uNormalSampler      int 1
                param_named uORMSampler         int 2
                param_named uEmissiveSampler    int 3
                param_named uReflectionMap      int 4
            }
        }
    }
}
