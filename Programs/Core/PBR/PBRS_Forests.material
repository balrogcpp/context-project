import PBRS_Basic from PBRS.material
import PBRS_I_vs from PBRS.program
import PBRS_I_fs from PBRS.program

vertex_program PBRS_Paged_vs glsl glsles : PBRS_I_vs
{
	source PBR.vert
    preprocessor_defines HAS_NORMALS,HAS_TANGENTS,HAS_UV,MAX_LIGHTS=8
    default_params {
        shared_params_ref PBRS_Shared_vert
    }
}

fragment_program PBRS_Paged_fs glsl glsles : PBRS_I_fs
{
	source PBR.frag
    preprocessor_defines HAS_NORMALS,HAS_TANGENTS,HAS_BASECOLORMAP,HAS_ALPHA,MAX_LIGHTS=8
    default_params {
        param_named_auto uAlphaRejection surface_alpha_rejection_value
    }
}

abstract material PBRS_Paged : PBRS_Basic
{
    receive_shadows off
    transparency_casts_shadows on

    set $Albedo white.dds

    technique
    {
        pass
        {
            alpha_rejection greater_equal 127

            texture_unit Albedo
            {
                texture $Albedo
            }

            vertex_program_ref PBRS_Paged_vs {}

            fragment_program_ref PBRS_Paged_fs
            {
                param_named uAlbedoSampler int 0
            }
        }
    }
}
