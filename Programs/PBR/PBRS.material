// This source file is part of "glue project". Created by Andrew Vasiliev

abstract material PBRS_Basic
{
    transparency_casts_shadows off
    receive_shadows off

    set $Albedo white.dds

    technique
    {
        pass
        {
            specular 1 1 1 1
            diffuse 1 1 1
            ambient 1 1 1
            emissive 1 1 1

            texture_unit Albedo
            {
                texture $Albedo
            }

            vertex_program_ref PBRS_vs {}

            fragment_program_ref PBRS_Basic_fs
            {
                param_named uAlbedoSampler int 0
            }
        }
    }
}

abstract material PBRS
{
    transparency_casts_shadows off
    receive_shadows off

    set $Albedo white.dds
    set $Normal normal.dds
    set $ORM white.dds
    set $Emissive black.dds

    technique
    {
        pass
        {
            diffuse 1 1 1
            specular 1 1 1 1
            ambient 1 1 1
            emissive 1 1 1

            texture_unit Albedo
            {
                texture $Albedo
            }
            texture_unit Normal
            {
                texture $Normal
            }
            texture_unit ORM
            {
                texture $ORM
            }
            texture_unit Emissive
            {
                texture $Emissive
            }

            vertex_program_ref PBRS_vs {}

            fragment_program_ref PBRS_fs
            {
                param_named uAlbedoSampler      int 0
                param_named uNormalSampler      int 1
                param_named uORMSampler         int 2
                param_named uEmissiveSampler    int 3
            }
        }
    }
}

abstract material PBRS_IBL : PBRS
{
    transparency_casts_shadows off
    receive_shadows off

    set $IBL_Diffuse diffuse.dds
    set $IBL_Specular specular.dds
    set $IBL_LUT brdfLUT.dds

    technique
    {
        pass
        {
            texture_unit IBL_Diffuse
            {
                texture $IBL_Diffuse cubic
                tex_address_mode clamp
                filtering bilinear
            }
            texture_unit IBL_Specular
            {
                texture $IBL_Specular cubic
                tex_address_mode clamp
                filtering bilinear
            }
            texture_unit IBL_LUT
            {
                tex_address_mode clamp
                texture $IBL_LUT
                filtering bilinear
            }
            
            vertex_program_ref PBRS_vs {}

            fragment_program_ref PBRS_IBL_fs
            {
                param_named uAlbedoSampler      int 0
                param_named uNormalSampler      int 1
                param_named uMetallicSampler    int 2
                param_named uRoughnessSampler   int 3
                param_named uOcclusionSampler   int 4
                param_named uEmissiveSampler    int 5
                param_named uDiffuseEnvSampler  int 6
                param_named uSpecularEnvSampler int 7
                param_named ubrdfLUT            int 8
            }
        }
    }
}

vertex_program PBRS_Reflective_vs glsl glsles
{
	source pbr.vert
    preprocessor_defines HAS_NORMALS,HAS_TANGENTS,HAS_UV,HAS_REFLECTION,MAX_LIGHTS=8
}

fragment_program PBRS_Reflective_fs glsl glsles
{
	source pbr.frag
    preprocessor_defines HAS_NORMALS,HAS_TANGENTS,HAS_BASECOLORMAP,HAS_NORMALMAP,HAS_EMISSIVEMAP,HAS_ORM,HAS_REFLECTION,MAX_LIGHTS=8

    default_params
    {
        shared_params_ref PBRS_Shared_frag
    }
}

abstract material Plane : PBRS
{
    receive_shadows off
    transparency_casts_shadows off

    technique
    {
        pass
        {
            texture_unit ReflectionMap
            {
                texture black.dds
                filtering bilinear
            }

            vertex_program_ref PBRS_Reflective_vs {}

            fragment_program_ref PBRS_Reflective_fs
            {
                param_named uAlbedoSampler      int 0
                param_named uNormalSampler      int 1
                param_named uORMSampler         int 2
                param_named uEmissiveSampler    int 3
                param_named uReflectionMap      int 4
            }
        }
    }
}

vertex_program PBRS_Terrain_vs_gl glsl
{
	source pbr.vert
    preprocessor_defines HAS_UV,MAX_LIGHTS=8
    default_params {
        shared_params_ref PBRS_Shared_vert
    }
}

vertex_program PBRS_Terrain_vs_es glsles
{
	source pbr.vert
    preprocessor_defines VERTEX_COMPRESSION,HAS_UV,MAX_LIGHTS=8
    default_params {
        shared_params_ref PBRS_Shared_vert
    }
}

vertex_program PBRS_Terrain_vs unified
{
    delegate PBRS_Terrain_vs_gl
    delegate PBRS_Terrain_vs_es
}

fragment_program PBRS_Terrain_fs_gl glsl
{
	source pbr.frag
    preprocessor_defines TERRAIN,HAS_BASECOLORMAP,HAS_EMISSIVEMAP,HAS_NORMALMAP,HAS_PARALLAXMAP,HAS_ORM,MAX_LIGHTS=8

    default_params
    {
        shared_params_ref PBRS_Shared_frag
        param_named uTerrainTexScale float 50.0
    }
}

fragment_program PBRS_Terrain_fs_es glsles
{
	source pbr.frag
    preprocessor_defines TERRAIN,HAS_BASECOLORMAP,HAS_EMISSIVEMAP,HAS_NORMALMAP,HAS_PARALLAXMAP,HAS_ORM,MAX_LIGHTS=8

    default_params
    {
        shared_params_ref PBRS_Shared_frag
        param_named uTerrainTexScale float 50.0
    }
}

fragment_program PBRS_Terrain_fs unified
{
    delegate PBRS_Terrain_fs_gl
    delegate PBRS_Terrain_fs_es
}


abstract material Terrain : PBRS
{
    technique
    {
        pass
        {
            texture_unit GlobalNormal
            {
                texture normal.dds
                filtering bilinear
            }

            /*texture_unit GlobalShadow
            {
                texture white.dds
                filtering bilinear
            }*/

            vertex_program_ref PBRS_Terrain_vs
            {
                param_named_auto uModelMatrix world_matrix
            }

            fragment_program_ref PBRS_Terrain_fs
            {
                param_named uAlbedoSampler       int 0
                param_named uNormalSampler       int 1
                param_named uORMSampler          int 2
                param_named uEmissiveSampler     int 3
                param_named uGlobalNormalSampler int 4
                //param_named uGlobalShadowSampler int 5
            }
        }
    }
}

vertex_program PBRS_Paged_vs glsl glsles
{
	source pbr.vert
    preprocessor_defines HAS_NORMALS,HAS_TANGENTS,HAS_UV,MAX_LIGHTS=8
    default_params {
        shared_params_ref PBRS_Shared_vert
    }
}

fragment_program PBRS_Paged_fs glsl glsles
{
	source pbr.frag
    preprocessor_defines HAS_NORMALS,HAS_TANGENTS,HAS_BASECOLORMAP,HAS_ALPHA,MAX_LIGHTS=8
}

abstract material Paged : PBRS_Basic
{
    receive_shadows off
    transparency_casts_shadows on

    set $Albedo white.dds

    technique
    {
        pass
        {
            alpha_rejection greater_equal 127

            texture_unit Albedo
            {
                texture $Albedo
            }

            vertex_program_ref PBRS_Paged_vs {}

            fragment_program_ref PBRS_Paged_fs
            {
                param_named uAlbedoSampler int 0
            }
        }
    }
}

vertex_program PBRS_Grass_vs glsl glsles
{
	source pbr.vert
    preprocessor_defines PAGED_GEOMETRY,HAS_NORMALS,HAS_TANGENTS,HAS_UV,HAS_COLOURS,MAX_LIGHTS=8
    default_params {
        shared_params_ref PBRS_Shared_vert
    }
}

fragment_program PBRS_Grass_fs glsl glsles
{
	source pbr.frag
    preprocessor_defines PAGED_GEOMETRY,HAS_NORMALS,HAS_TANGENTS,HAS_BASECOLORMAP,HAS_COLOURS,HAS_ALPHA,MAX_LIGHTS=8
}

abstract material Grass : PBRS_Basic
{
    receive_shadows off
    transparency_casts_shadows off

    set $Albedo white.dds

    technique
    {
        pass
        {
            alpha_rejection greater_equal 128
            cull_hardware none
            //scene_blend alpha_blend

            texture_unit Albedo
            {
                texture $Albedo
                tex_address_mode clamp
            }

            vertex_program_ref PBRS_Grass_vs {}

            fragment_program_ref PBRS_Grass_fs
            {
                param_named uAlbedoSampler int 0
            }
        }
    }
}

abstract material Plant : PBRS_Basic
{
    receive_shadows off
    transparency_casts_shadows on

    set $Albedo white.dds

    technique
    {
        pass
        {
            alpha_rejection greater_equal 128

            texture_unit Albedo
            {
                texture $Albedo
            }

            vertex_program_ref PBRS_Grass_vs {}

            fragment_program_ref PBRS_Grass_fs
            {
                param_named uAlbedoSampler int 0
            }
        }
    }
}

vertex_program PBRS_Fx_vs glsl glsles
{
	source pbr.vert
    preprocessor_defines HAS_UV,HAS_COLOURS,MAX_LIGHTS=1
    default_params {
        shared_params_ref PBRS_Shared_vert
    }
}

fragment_program PBRS_Fx_fs glsl glsles
{
	source pbr.frag
    preprocessor_defines HAS_BASECOLORMAP,HAS_COLOURS,HAS_ALPHA,MAX_LIGHTS=1
}

abstract material PBRS_Fx : PBRS_Basic
{
    receive_shadows off
    transparency_casts_shadows off

    set $Albedo white.dds

    technique
    {
        pass
        {
            lighting off
            alpha_rejection greater_equal 128
            cull_hardware none
            scene_blend add

            texture_unit Albedo
            {
                texture $Albedo
                filtering bilinear
                tex_address_mode clamp
            }

            vertex_program_ref PBRS_Fx_vs {}

            fragment_program_ref PBRS_Fx_fs
            {
                param_named uAlbedoSampler int 0
            }
        }
    }
}
