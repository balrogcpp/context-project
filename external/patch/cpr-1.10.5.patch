diff --git a/CMakeLists.txt b/CMakeLists.txt
index 68b5343..4025a29 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -105,7 +105,7 @@ endif()
 
 if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
 else()
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -Wpedantic -Werror")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -Wpedantic")
 endif()
 
 # SSL
diff --git a/include/CMakeLists.txt b/include/CMakeLists.txt
index 3f14410..8548fcb 100644
--- a/include/CMakeLists.txt
+++ b/include/CMakeLists.txt
@@ -1,12 +1,12 @@
 cmake_minimum_required(VERSION 3.15)
 
-target_include_directories(cpr PUBLIC
-    $<INSTALL_INTERFACE:include>
-    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
-    $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}/cpr_generated_includes/>)
+target_include_directories(cpr PUBLIC $<INSTALL_INTERFACE:include> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}/cpr_generated_includes/>)
+if (NOT EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/cpr/ghc/filesystem.hpp)
+    file(DOWNLOAD https://raw.githubusercontent.com/gulrak/filesystem/v1.5.14/include/ghc/filesystem.hpp ${CMAKE_CURRENT_SOURCE_DIR}/cpr/ghc/filesystem.hpp)
+endif ()
 
 target_sources(cpr PRIVATE
-    # Header files (useful in IDEs)
+    cpr/ghc/filesystem.hpp
     cpr/accept_encoding.h
     cpr/api.h
     cpr/async.h
diff --git a/include/cpr/filesystem.h b/include/cpr/filesystem.h
index f296770..d0dd5c2 100644
--- a/include/cpr/filesystem.h
+++ b/include/cpr/filesystem.h
@@ -9,18 +9,21 @@ namespace cpr {
 namespace fs = boost::filesystem;
 }
 // cppcheck-suppress preprocessorErrorDirective
-#elif __has_include(<filesystem>)
+#elif __has_include(<filesystem>) && ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || (defined(__cplusplus) && __cplusplus >= 201703L && !defined(__APPLE__)) || (!defined(__MAC_OS_X_VERSION_MIN_REQUIRED) || __MAC_OS_X_VERSION_MIN_REQUIRED >= 101500))
 #include <filesystem>
 namespace cpr {
 namespace fs = std::filesystem;
 }
-#elif __has_include("experimental/filesystem")
-#include <experimental/filesystem>
+//#elif __has_include("experimental/filesystem")
+//#include <experimental/filesystem>
+//namespace cpr {
+//namespace fs = std::experimental::filesystem;
+//}
+#else
+#include "ghc/filesystem.hpp"
 namespace cpr {
-namespace fs = std::experimental::filesystem;
+namespace fs = ghc::filesystem;
 }
-#else
-#error "Failed to include <filesystem> header!"
 #endif
 
 #endif
